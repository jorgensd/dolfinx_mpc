run-demos:
  stage: test
  only:
    - schedules
    - main
    - merge_requests
  tags:
    - docker
  image:
    name: dolfinx/dev-env:v0.5.0
    entrypoint: [""]
  parallel:
    matrix:
      - PETSC_TYPE: ["real", "complex"]
  variables:
    PETSC_ARCH: "linux-gnu-${PETSC_TYPE}-32"
    DOLFINX_DIR: "dolfinx-${PETSC_TYPE}"
    BASIX_BRANCH: "v0.5.0"
    FFCX_BRANCH: "v0.5.0"
    UFL_BRANCH: "2022.2.0"
    DOLFINX_BRANCH: "v0.5.0"
    PYTHONPATH: "/usr/local/dolfinx-${PETSC_TYPE}/lib/python3.10/dist-packages:/usr/local/lib/"
    LD_LIBRARY_PATH: "/usr/local/petsc/${PETSC_ARCH}/lib/:/usr/local/lib/"
    MPC_CMAKE_CXX_FLAGS: "-Wall -Werror -g -pedantic -Ofast -march=native"
    MPC_BUILD_MODE: "Debug"
    CC: "mpicc"
    HDF5_MPI: "ON"
    HDF5_DIR: "/usr/local"

  before_script:
    - flake8 python/
    - pip3 install mypy
    - cd python
    - python3 -m mypy . --exclude=build
    - cd ..
    - pip3 install --no-cache-dir --no-binary=h5py h5py
    - git clone -b ${BASIX_BRANCH} --single-branch --depth 1 https://github.com/FEniCS/basix.git
    - cmake -G Ninja -B build-basix -DCMAKE_BUILD_TYPE="Release" -S ./basix/cpp/
    - cmake --build build-basix --parallel 3
    - cmake --install build-basix
    - BUILD_TYPE="Release" pip3 install ./basix/python
    - python3 -m pip install git+https://github.com/FEniCS/ufl.git@${UFL_BRANCH}
    - python3 -m pip install git+https://github.com/FEniCS/ffcx.git@${FFCX_BRANCH}
    - git clone -b ${DOLFINX_BRANCH} --single-branch --depth 1 https://github.com/FEniCS/dolfinx.git && \
    - cmake -G Ninja -DCMAKE_BUILD_TYPE="Release" -B build-dolfinx -S ./dolfinx/cpp/
    - cmake --build build-dolfinx
    - cmake --install build-dolfinx
    - BUILD_TYPE="Release" python3 -m pip -v install ./dolfinx/python/
    - cmake -G Ninja -B build-dir -DCMAKE_BUILD_TYPE=${MPC_BUILD_MODE} -DCMAKE_CXX_FLAGS="${MPC_CMAKE_CXX_FLAGS}" -S cpp/
    - cmake --build build-dir --parallel 3
    - cmake --install build-dir
    - BUILD_TYPE="${MPC_BUILD_MODE}" CXX_FLAGS="${MPC_CMAKE_CXX_FLAGS}" python3 -m pip -v install python/

  script:
    - python3 -m pytest python/tests -v
    - mpirun -n 2 python3 -m pytest python/tests
    - mpirun -n 3 python3 -m pytest python/tests
    - mpirun -n 4 python3 -m pytest python/tests
    - cd python/benchmarks
    - mkdir results
    - mkdir meshes
    - mpirun -n 4 python3 bench_periodic.py --nref=2 --tet --gamg --timings
    - mpirun -n 4 python3 bench_elasticity_edge.py --nref=2 --gamg --timings
    - mpirun -n 4 python3 bench_contact_3D.py
    - cd ../demos
    - mkdir meshes
    - mkdir results
    - python3 demo_elasticity.py
    - mpirun -n 4 python3 demo_elasticity.py
    - python3 demo_periodic_geometrical.py
    - mpirun -n 4 python3 demo_periodic_geometrical.py
    - python3 demo_stokes.py
    - mpirun -n 4 python3 demo_stokes.py
    - python3 demo_periodic3d_topological.py
    - mpirun -n 4 python3 demo_periodic3d_topological.py
    - python3 demo_elasticity_disconnect_2D.py
    - mpirun -n 4 python3 demo_elasticity_disconnect_2D.py
    - python3 demo_elasticity_disconnect.py
    - mpirun -n 4 python3 demo_elasticity_disconnect.py
    - make contact2D-serial
    - make contact2D-parallel
    - make contact3D-serial
    - make contact3D-parallel
