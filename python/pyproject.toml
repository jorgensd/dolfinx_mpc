[build-system]
requires = [
      "scikit-build-core[pyproject]",
      "nanobind>=2.0.0",
      "petsc4py",
      "mpi4py",
]
build-backend = "scikit_build_core.build"

[project]
name = "dolfinx_mpc"
version = "0.10.0"
description = "DOLFINx_MPC Python interface"
readme = "README.md"
requires-python = ">=3.10.0"
license = "MIT"
authors = [{ email = "dokken@simula.no", name = "JÃ¸rgen S. Dokken" }]
dependencies = [
      "numpy>=1.21",
      "cffi",
      "petsc4py",
      "mpi4py",
      "fenics-dolfinx>=0.10.0,<0.11.0",
]

[project.optional-dependencies]
docs = ['jupyter-book', 'jupytext', "scipy", "sphinx-codeautolink"]
lint = ["ruff", "mypy"]
optional = ["numba"]
test = ["pytest", "coverage", "scipy"]
all = [
      "dolfinx_mpc[docs]",
      "dolfinx_mpc[optional]",
      "dolfinx_mpc[lint]",
      "dolfinx_mpc[test]",
]

[tool.scikit-build]
sdist.exclude = ["*.cpp"]
cmake.build-type = "Release"

[tool.pytest]
junit_family = "xunit2"

[tool.mypy]
ignore_missing_imports = true
# Folders to exclude
exclude = ["docs/", "build/"]
# Folder to check with mypy
files = ["src", "tests"]

[tool.ruff]
src = ["benchmarks", "demos", "src"]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
      # Pyflakes
      "F",
      # Pycodestyle
      "E",
      "W",
      # isort
      "I001",
]


[tool.ruff.lint.isort]
known-first-party = ["dolfinx_mpc"]
known-third-party = [
      "basix",
      "dolfinx",
      "ffcx",
      "ufl",
      "gmsh",
      "numpy",
      "pytest",
]
section-order = [
      "future",
      "standard-library",
      "mpi",
      "third-party",
      "first-party",
      "local-folder",
]

[tool.ruff.lint.isort.sections]
"mpi" = ["mpi4py", "petsc4py"]
